{"version":3,"sources":["webpack:///./src/components/initial-data.jsx","webpack:///./src/components/Task.jsx","webpack:///./src/components/Theme.jsx","webpack:///./src/components/DropdownMenu.jsx","webpack:///./src/components/Column.jsx","webpack:///./src/components/App.jsx","webpack:///./src/index.jsx"],"names":["initialData","tasks","id","content","deadlineTime","idForComments","columns","title","taskIds","color","columnOrder","CardTask","styled","Card","borderRadius","boxShadow","margin","SimpleBadge","withStyles","theme","badge","left","top","width","Badge","GridItem","Grid","padding","Handle","div","item","xs","sm","fontSize","Tasks","render","draggableId","this","props","task","index","provided","variant","draggableProps","ref","innerRef","dragHandleProps","CardContent","container","direction","justify","alignItems","badgeContent","style","React","Component","newTheme","createMuiTheme","background","main","grey","status","danger","useStyles","makeStyles","root","backgroundColor","shadows","circleTitle","paddingRight","heading","typography","pxToRem","fontWeight","fontWeightRegular","droppableIvents","pointerEvents","notDroppableIvents","details","flexBasis","flexWrap","button","marginTop","position","transform","form","textField","DropdownMenu","classes","useState","setTask","date","setDate","ThemeProvider","className","ExpansionPanel","droppable","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","TextField","label","name","value","onChange","e","target","InputLabelProps","shrink","type","Button","onClick","addTask","ColumnContainer","Container","GridForHeader","border","ColumnDroppableContainer","minHeight","TaskList","isDraggingOver","Column","maxWidth","column","firstColumnId","droppableId","snapshot","droppableProps","map","key","placeholder","App","result","document","body","destination","source","columnForDrag","state","columnForDrop","taskIdForDrag","Array","from","taskIdForDrop","splice","newColumnForDrag","newColumnForDrop","newState","setState","bind","newTaskData","taskName","Object","keys","length","newTaskObj","newColumnObj","onDragEnd","columnId","taskId","querySelector"],"mappings":"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","file":"main.cd6f6fd8.js","sourcesContent":["const initialData = {\r\n  tasks: {\r\n    'task-1': {\r\n      id: 'task-1',\r\n      content: 'Сделать выемку грунта под фундаменты',\r\n      deadlineTime: 3,\r\n      idForComments: '',\r\n    },\r\n    'task-2': {\r\n      id: 'task-2',\r\n      content: 'Сделать гравийную подготовку под фундаменты',\r\n      deadlineTime: 2,\r\n      idForComments: '',\r\n    },\r\n    'task-3': {\r\n      id: 'task-3',\r\n      content: 'Сделать песчаную подготовку под фундаменты',\r\n      deadlineTime: 2,\r\n      idForComments: '',\r\n    },\r\n    'task-4': {\r\n      id: 'task-4',\r\n      content: 'Сделать гидроизоцию подошвы фундамента',\r\n      deadlineTime: 2,\r\n      idForComments: '',\r\n    },\r\n    'task-5': {\r\n      id: 'task-5',\r\n      content: 'Установить блоки фундамента',\r\n      deadlineTime: 4,\r\n      idForComments: '',\r\n    },\r\n    'task-6': {\r\n      id: 'task-6',\r\n      content: 'Выполнить обмазочную гидроизоляцию битумом на два раза',\r\n      deadlineTime: 3,\r\n      idForComments: 'rtrt',\r\n    },\r\n    'task-7': {\r\n      id: 'task-7',\r\n      content: 'Закрыть фундаменты защитной мембраной',\r\n      deadlineTime: 1,\r\n      idForComments: '',\r\n    },\r\n  },\r\n  columns: {\r\n    'column-1': {\r\n      id: 'column-1',\r\n      title: 'Наряды',\r\n      taskIds: ['task-7', 'task-6'],\r\n      color: '#c4c8d1',\r\n    },\r\n    'column-2': {\r\n      id: 'column-2',\r\n      title: 'В работе',\r\n      taskIds: ['task-5', 'task-4'],\r\n      color: '#7dd7aa',\r\n    },\r\n    'column-3': {\r\n      id: 'column-3',\r\n      title: 'Приёмка',\r\n      taskIds: ['task-3', 'task-2'],\r\n      color: '#f6ab39',\r\n    },\r\n    'column-4': {\r\n      id: 'column-4',\r\n      title: 'Завершено',\r\n      taskIds: ['task-1'],\r\n      color: '#1e5ef4',\r\n    },\r\n  },\r\n  columnOrder: ['column-1', 'column-2', 'column-3', 'column-4'],\r\n};\r\n\r\nexport default initialData;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { Card } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Badge } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst CardTask = styled(Card)({\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px #dadada',\r\n  margin: '6px 0 0 0',\r\n});\r\n\r\nconst SimpleBadge = withStyles((theme) => ({\r\n  badge: {\r\n    left: 5,\r\n    top: '50%',\r\n    width: 'auto',\r\n  },\r\n}))(Badge);\r\n\r\nconst GridItem = styled(Grid)({\r\n  padding: '20px 0 0 0',\r\n});\r\n\r\nconst Handle = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #ddd;\r\n  border-radius: 50%;\r\n  margin-bottom: 3%;\r\n`;\r\n\r\nexport default class Tasks extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.task.id} index={this.props.index}>\r\n        {(provided) => (\r\n          <CardTask\r\n            variant=\"outlined\"\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <CardContent>{this.props.task.content}</CardContent>\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <GridItem item xs={2} sm={2}>\r\n                  <ArrowUpwardIcon color=\"primary\" fontSize=\"small\" />\r\n                </GridItem>\r\n                <GridItem item xs={2} sm={2}>\r\n                  <SimpleBadge\r\n                    badgeContent={this.props.task.idForComments != '' ? 1 : 0}\r\n                  >\r\n                    <ChatBubbleOutlineIcon color=\"primary\" fontSize=\"small\" />\r\n                  </SimpleBadge>\r\n                </GridItem>\r\n\r\n                <GridItem item xs={3} sm={3}>\r\n                  <SimpleBadge\r\n                    badgeContent={this.props.task.idForComments != '' ? 1 : 0}\r\n                  >\r\n                    <WarningIcon style={{ color: 'orange' }} fontSize=\"small\" />\r\n                  </SimpleBadge>\r\n                </GridItem>\r\n                <GridItem item xs={3} sm={3}>\r\n                  {this.props.task.deadlineTime} д\r\n                </GridItem>\r\n                <Grid item xs={2} sm={2}>\r\n                  <Handle />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </CardTask>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst newTheme = createMuiTheme({\r\n  background: {\r\n    main: grey[500],\r\n  },\r\n  status: {\r\n    danger: '#9e9e9e',\r\n  },\r\n});\r\n\r\nexport default newTheme;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\n\r\nimport { ExpansionPanel } from '@material-ui/core';\r\nimport { ExpansionPanelDetails } from '@material-ui/core';\r\nimport { ExpansionPanelSummary } from '@material-ui/core';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport newTheme from './Theme';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((newTheme) => ({\r\n  root: {\r\n    backgroundColor: grey[100],\r\n    width: 'auto',\r\n    boxShadow: newTheme.shadows[0],\r\n  },\r\n  circleTitle: {\r\n    margin: 'auto 0',\r\n    paddingRight: '20px',\r\n  },\r\n  heading: {\r\n    fontSize: newTheme.typography.pxToRem(20),\r\n    fontWeight: newTheme.typography.fontWeightRegular,\r\n  },\r\n  droppableIvents: {\r\n    pointerEvents: 'none',\r\n    backgroundColor: grey[100],\r\n    width: 'auto',\r\n    boxShadow: newTheme.shadows[0],\r\n  },\r\n  notDroppableIvents: {\r\n    backgroundColor: grey[100],\r\n    width: 'auto',\r\n    boxShadow: newTheme.shadows[0],\r\n  },\r\n  details: {\r\n    flexBasis: '100%',\r\n    flexWrap: 'wrap',\r\n  },\r\n  button: {\r\n    flexWrap: 'wrap',\r\n    marginTop: '50px',\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  form: { width: '100%' },\r\n  textField: { marginTop: '20px', width: '100%' },\r\n}));\r\n\r\nexport default function DropdownMenu(props) {\r\n  const classes = useStyles();\r\n  const [task, setTask] = useState('Введите задание');\r\n  const [date, setDate] = useState(1);\r\n\r\n  const addTask = () => {\r\n    props.addTask({ task: task, date: date });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={newTheme}>\r\n      <div className={classes.root}>\r\n        <ExpansionPanel\r\n          className={\r\n            !props.droppable\r\n              ? classes.droppableIvents\r\n              : classes.notDroppableIvents\r\n          }\r\n        >\r\n          <ExpansionPanelSummary\r\n            className={classes.root}\r\n            expandIcon={props.droppable ? <AddIcon /> : null}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <FiberManualRecordIcon\r\n              fontSize=\"small\"\r\n              className={classes.circleTitle}\r\n              style={{ color: props.color }}\r\n            />\r\n            <Typography variant=\"h5\">{props.title}</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.details}>\r\n            <div>\r\n              Введите в следующие поля задачу и выставите срок, за который\r\n              задача должна быть выполнена\r\n            </div>\r\n\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Описание задачи\"\r\n              name=\"task\"\r\n              className={classes.textField}\r\n              value={task}\r\n              onChange={(e) => {\r\n                setTask(e.target.value);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Срок выполнения работ (в днях)\"\r\n              type=\"number\"\r\n              name=\"date\"\r\n              value={date}\r\n              onChange={(e) => {\r\n                e.target.value >= 1 ? setDate(e.target.value) : setDate(1);\r\n              }}\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <div className={classes.button}>\r\n              <Button type=\"submit\" form=\"taskForm\" onClick={addTask}>\r\n                создать\r\n              </Button>\r\n            </div>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport DropdownMenu from './DropdownMenu';\r\n\r\nconst ColumnContainer = styled(Container)({});\r\n\r\nconst GridForHeader = styled(Grid)({\r\n  padding: ' 0 0 0 0 ',\r\n  border: 0,\r\n  borderRadius: 8,\r\n  background: '#f5f5f5',\r\n  margin: '25px 0 10px',\r\n});\r\n\r\nconst ColumnDroppableContainer = styled(Container)({\r\n  border: 0,\r\n  borderRadius: 8,\r\n  background: '#f5f5f5',\r\n  padding: '8px 0 24px 0',\r\n  minHeight: 300,\r\n});\r\nconst TaskList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? 'skyblue' : '#f5f5f5'};\r\n  flex-grow: 1;\r\n  min-height: 300px;\r\n`;\r\n\r\nclass Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ColumnContainer maxWidth={'xs'}>\r\n        <GridForHeader\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <DropdownMenu\r\n            title={this.props.column.title}\r\n            color={this.props.column.color}\r\n            droppable={\r\n              this.props.column.id == this.props.firstColumnId ? true : false\r\n            }\r\n            addTask={this.props.addTask}\r\n          />\r\n        </GridForHeader>\r\n        <ColumnDroppableContainer>\r\n          <Droppable droppableId={this.props.column.id}>\r\n            {(provided, snapshot) => (\r\n              <TaskList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {this.props.tasks.map((task, index) => (\r\n                  <Task key={task.id} task={task} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n              </TaskList>\r\n            )}\r\n          </Droppable>\r\n        </ColumnDroppableContainer>\r\n      </ColumnContainer>\r\n    );\r\n  }\r\n}\r\nexport default Column;\r\n","import '../App.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport initialData from './initial-data.jsx';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport Column from './Column.jsx';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media only screen and (min-width: 1000px) and (max-width: 1300px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addTask = this.addTask.bind(this);\r\n  }\r\n  state = initialData;\r\n\r\n  onDragEnd = (result) => {\r\n    document.body.style.color = 'inherit';\r\n    document.body.style.backgroundColor = 'inherit';\r\n\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId <= destination.droppableId) {\r\n      const columnForDrag = this.state.columns[source.droppableId];\r\n      const columnForDrop = this.state.columns[destination.droppableId];\r\n\r\n      const taskIdForDrag = Array.from(columnForDrag.taskIds);\r\n      let taskIdForDrop = Array.from(columnForDrop.taskIds);\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        taskIdForDrag.splice(source.index, 1);\r\n        taskIdForDrag.splice(destination.index, 0, draggableId);\r\n        taskIdForDrop = taskIdForDrag;\r\n      } else {\r\n        taskIdForDrag.splice(source.index, 1);\r\n        taskIdForDrop.splice(destination.index, 0, draggableId);\r\n      }\r\n\r\n      const newColumnForDrag = { ...columnForDrag, taskIds: taskIdForDrag };\r\n      const newColumnForDrop = { ...columnForDrop, taskIds: taskIdForDrop };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newColumnForDrag.id]: newColumnForDrag,\r\n          [newColumnForDrop.id]: newColumnForDrop,\r\n        },\r\n      };\r\n\r\n      this.setState(newState);\r\n    }\r\n  };\r\n\r\n  addTask(newTaskData) {\r\n    const lengthOfTask = Object.keys(this.state.tasks).length + 1;\r\n    const taskName = 'task-' + lengthOfTask;\r\n    const newTaskObj = {\r\n      [taskName]: {\r\n        id: taskName,\r\n        content: newTaskData.task,\r\n        deadlineTime: newTaskData.date,\r\n        idForComments: '',\r\n      },\r\n    };\r\n\r\n    const newColumnObj = {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'Наряды',\r\n        taskIds: [...this.state.columns['column-1'].taskIds, taskName],\r\n        color: '#c4c8d1',\r\n      },\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        ...newColumnObj,\r\n      },\r\n      tasks: {\r\n        ...this.state.tasks,\r\n\r\n        ...newTaskObj,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  a = {};\r\n  render() {\r\n    const lenghtOfTask = Object(this.state.tasks).length;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Container>\r\n          {this.state.columnOrder.map((columnId) => {\r\n            const column = this.state.columns[columnId];\r\n            const tasks = column.taskIds.map(\r\n              (taskId) => this.state.tasks[taskId]\r\n            );\r\n            return (\r\n              <Column\r\n                key={column.id}\r\n                column={column}\r\n                tasks={tasks}\r\n                firstColumnId={this.state.columnOrder[0]}\r\n                addTask={this.addTask}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\n\nimport React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './components/App.jsx';\n\nrender(<App />, document.querySelector('#app'));\n"],"sourceRoot":""}